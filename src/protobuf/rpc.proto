enum req_type {
	EMPTY	 	= 0;
	CT_CREATE	= 1;
	CT_DESTROY	= 2;

	CT_GET_STATE	= 3;
	CT_SPAWN	= 4;
	CT_ENTER	= 5;
	CT_KILL		= 6;
	CT_WAIT		= 7;

	CT_SETNSMASK	= 8;
	CT_ADD_CNTL	= 9;
	CT_CFG_CNTL	= 10;

	FS_SETROOT	= 11;
	FS_SETPRIVATE	= 12;

	CT_SET_OPTION	= 13;
	CT_NET_ADD	= 14;
}

message create_req {
	required string	name		= 1;
}

message execv_req {
	required string path		= 1;
	repeated string args		= 2;
}

message nsmask_req {
	required uint64 mask		= 1;
}

message addcntl_req {
	required uint32 ctype		= 1;
}

message cfgcntl_req {
	required uint32	ctype		= 1;
	required string param		= 2;
	required string	value		= 3;
}

message setroot_req {
	required string root		= 1;
}

message setpriv_req {
	required int32	type		= 1;
	optional string	path		= 2;
}

message setoption_req {
	required int32	opt		= 1;
}

message netadd_req {
	required int32	type		= 1;
	optional string	nicname		= 2;
}

message create_resp {
	required uint64	rid		= 1;
}

message state_resp {
	required uint32 state		= 1;
}

message rpc_request {
	required req_type	req	= 1;
	optional uint64		ct_rid	= 2;

	optional create_req	create	= 3;
	optional execv_req	execv	= 4;
	optional nsmask_req	nsmask	= 5;
	optional addcntl_req	addcntl	= 6;
	optional cfgcntl_req	cfgcntl	= 7;
	optional setroot_req	setroot	= 8;
	optional setpriv_req	setpriv	= 9;
	optional setoption_req	setopt	= 10;
	optional netadd_req	netadd	= 11;
}

message rpc_responce {
	required bool		success	= 1;

	optional create_resp	create	= 2;
	optional state_resp	state	= 3;
}
